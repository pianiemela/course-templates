title: Hello Abitti!
description: An example of grading Abitti code with Node.js
instructions: |
  <p>This page shows how to register JavaScript functions as
    listeners to changes in a Abitti
    editor.
    <iframe id="ggbFrame" src="/static/default/_static/abi_child.html" onload="postMsg();" width="1000" height="600" frameborder="0"></iframe>

    <script type="text/javascript">
      function postMsg() {
        var ggbFrame = document.getElementById("ggbFrame");
        // TODO: Hello Teacher, edit cmd! 
        // TODO: The very same cmds that you inserted in the GeoGebra web UI apply.
        // TODO: semi-colon(;) separates the commands.
        var conf = "conf";
        ggbFrame.contentWindow.postMessage(conf, '*');
      };
      document.getElementById("v_id").style.display = "none";
      var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
      var eventer = window[eventMethod];
      var messageEvent = eventMethod === "attachEvent" ? "onmessage" : "message";
      eventer(messageEvent, function (e) {
      var data = (typeof e.data) === "string" ? e.data : "";
       document.getElementById("v_id").value = data;
      });
    </script>
  </p>
# acceptPost tuottaa tekstikentÃ¤n sivulle
# tiedoston palautuslomakkeen sijaan
view_type: access.types.stdasync.acceptPost 
fields: # nÃ¤iden tÃ¤ytyy olla valideja HTML-formien attribuutteja
  - name: v # Lomakkeen nimi verkkosivulla, tÃ¤ytyy olla yksikÃ¤sitteinen ja sopia yhteen v_id:n kanssa (ks.yllÃ¤) ja run.sh:n kanssa (ks.alla)
    required: True

container:
  image: apluslms/grade-nodejs:11-2.7
  mount: exercises/abitti-example
  cmd: /exercise/run.sh v '{"A":1,"B":2}'
